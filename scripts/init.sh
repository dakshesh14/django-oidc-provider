#!/usr/bin/env bash

set -e

# ------------------------------------------------------------------------------
#  PRECHECK
# ------------------------------------------------------------------------------
if ! command -v gum &> /dev/null; then
  echo "❌ Gum is not installed. Please install it:"
  echo "   https://github.com/charmbracelet/gum#installation"
  echo "💡 Or run the init-plain.sh script for a fallback."
  exit 1
fi

gum style --border double --margin "1" --padding "1" --foreground 212 "Deployment Environment Initializer"
gum confirm "Have you read docs/deployment.md?" || exit 1

gum style --padding "1" --border normal --foreground 250 "This script will help you configure your production .env files with secure defaults and custom values."

# ------------------------------------------------------------------------------
#  UTILITY FUNCTIONS
# ------------------------------------------------------------------------------
generate_secret() {
  openssl rand -hex 64
}
generate_password() {
  openssl rand -base64 32 | tr -dc 'a-zA-Z0-9' | head -c 40
}

# ------------------------------------------------------------------------------
#  AUTO-GENERATED VALUES
# ------------------------------------------------------------------------------
DJANGO_SECRET_KEY=$(generate_secret)
CELERY_FLOWER_USER=$(generate_secret)
CELERY_FLOWER_PASSWORD=$(generate_secret)

# ------------------------------------------------------------------------------
#  USER INPUT
# ------------------------------------------------------------------------------
gum style --margin "1" --bold "Django Configuration"

ALLOWED_HOSTS=$(gum input --prompt "🔹 DJANGO_ALLOWED_HOSTS:" --placeholder ".example.com,localhost")
DJANGO_SERVER_EMAIL=$(gum input --prompt "📧 DJANGO_SERVER_EMAIL (optional):" --placeholder "alerts@example.com")
DJANGO_ADMIN_URL=$(gum input --prompt "🔐 DJANGO_ADMIN_URL:" --placeholder "admin" --value "admin")

gum style --foreground 244 "✔️ Django settings captured: HOSTS, SERVER_EMAIL, ADMIN_URL"


gum style --margin "1" --bold "Nginx Configuration"

DOMAIN=$(gum input --prompt "🌐 DOMAIN:" --placeholder "example.com" --value "example.com")
EMAIL_FOR_SSL=$(gum input --prompt "🌐 EMAIL_FOR_SSL:" --placeholder "your-name@example.com" --value "example.com")

gum style --margin "1" --bold "Email Configuration"

MAILGUN_API_KEY=$(gum input --prompt "🔹 MAILGUN_API_KEY:" --placeholder "key-...")
MAILGUN_DOMAIN=$(gum input --prompt "🔹 MAILGUN_DOMAIN:" --placeholder "example.mailgun.org")
DJANGO_DEFAULT_FROM_EMAIL=$(gum input --prompt "📤 DJANGO_DEFAULT_FROM_EMAIL:" --placeholder "noreply@example.com")

gum style --foreground 244 "✔️ Mailgun credentials captured."


gum style --margin "1" --bold "AWS S3 Configuration"

DJANGO_AWS_ACCESS_KEY_ID=$(gum input --prompt "🔹 AWS Access Key ID:" --placeholder "AKI...")
DJANGO_AWS_SECRET_ACCESS_KEY=$(gum input --prompt "🔹 AWS Secret Access Key:" --placeholder "secret...")
DJANGO_AWS_STORAGE_BUCKET_NAME=$(gum input --prompt "🔹 AWS S3 Bucket Name:" --placeholder "bucket-name")

gum style --foreground 244 "✔️ AWS credentials captured."


# ------------------------------------------------------------------------------
#  DATABASE CONFIGURATION (AUTOGENERATED)
# ------------------------------------------------------------------------------
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=dj-oidc-provider
POSTGRES_USER=$(generate_password)
POSTGRES_PASSWORD=$(generate_password)
DATABASE_URL="postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}"

# ------------------------------------------------------------------------------
#  WRITE FILES
# ------------------------------------------------------------------------------
echo ""
gum spin --spinner line --title "Rendering .envs/.production/.django..." -- sleep 1

DIR=$(dirname "$0")
"$DIR/render_template.sh" "$DIR/templates/.django.template" .envs/.production/.django \
  DJANGO_SECRET_KEY="$DJANGO_SECRET_KEY" \
  DJANGO_ALLOWED_HOSTS="$ALLOWED_HOSTS" \
  DJANGO_SERVER_EMAIL="$DJANGO_SERVER_EMAIL" \
  MAILGUN_API_KEY="$MAILGUN_API_KEY" \
  MAILGUN_DOMAIN="$MAILGUN_DOMAIN" \
  DJANGO_DEFAULT_FROM_EMAIL="$DJANGO_DEFAULT_FROM_EMAIL" \
  DJANGO_AWS_ACCESS_KEY_ID="$DJANGO_AWS_ACCESS_KEY_ID" \
  DJANGO_AWS_SECRET_ACCESS_KEY="$DJANGO_AWS_SECRET_ACCESS_KEY" \
  DJANGO_AWS_STORAGE_BUCKET_NAME="$DJANGO_AWS_STORAGE_BUCKET_NAME" \
  CELERY_FLOWER_USER="$CELERY_FLOWER_USER" \
  CELERY_FLOWER_PASSWORD="$CELERY_FLOWER_PASSWORD"

gum spin --spinner line --title "Rendering .envs/.production/.postgres..." -- sleep 1

cat > .envs/.production/.postgres <<EOF
# PostgreSQL
# ------------------------------------------------------------------------------
POSTGRES_HOST=${POSTGRES_HOST}
POSTGRES_PORT=${POSTGRES_PORT}
POSTGRES_DB=${POSTGRES_DB}
POSTGRES_USER=${POSTGRES_USER}
POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

DATABASE_URL=${DATABASE_URL}
EOF

gum spin --spinner line --title "Rendering .envs/.production/.core..." -- sleep 1

cat > .envs/.production/.core <<EOF
HEALTHCHECK_INTERVAL=30s
HEALTHCHECK_TIMEOUT=10s
HEALTHCHECK_RETRIES=3
HEALTHCHECK_START_PERIOD=10s

DOMAIN=${DOMAIN}
EMAIL_FOR_SSL=${EMAIL_FOR_SSL}
EOF

# ------------------------------------------------------------------------------
#  DONE
# ------------------------------------------------------------------------------
gum style --border rounded --padding "1" --foreground 35 <<EOF
✅ Environment files generated successfully!

📁 Files:
  • .envs/.production/.django
  • .envs/.production/.postgres
  • .envs/.production/.core

🚀 Next steps:
  → Run:     make deploy
  → Then:    make migrate
EOF
